<main class="container-fluid mt-3">
    <div class="row">
        <template
        v-if='listing'>
            <div class="col-6">
                <b-card
                :title='`Showing pictures of ${listing.title}`'
                bg-variant='info'
                class="d-flex align-items-center"
                >
                    <b-card-body
                    style='width: 600px; height: 100%;'
                    >
                        <template
                        v-if='listing_pictures.length'>
                            <b-carousel
                            id="carousel-1"
                            v-model="slide"
                            :interval="4000"
                            no-animation
                            controls
                            indicators
                            background="#ababab"
                            img-width="600"
                            img-height="480"
                            style="text-shadow: 1px 1px 2px #333;"
                            @sliding-start="onSlideStart"
                            @sliding-end="onSlideEnd"
                            >
                                <!-- Text slides with image -->
                                <b-carousel-slide
                                v-for='listing_picture of listing_pictures'
                                :img-src='`/api/listing/picture/${listing_picture.listing_picture_file_name}`'
                                >
                                </b-carousel-slide>
                            </b-carousel>
                            <p class="mt-4">
                            Picture #: \{{ slide + 1 }}
                            </p>
                        </template>
                        <template
                        v-else>
                            <article>
                                <h4>This listing has no pictures</h4>
                            </article>
                        </template>
                    </b-card-body>
                </b-card>
            </div>
            <div class="col-6">
                <b-card
                bg-variant='light'>
                    <b-card-text class="row">
                        <div class="col-12">
                            <div style="width: 75px; height: 75px">
                                <b-img rounded='circle' thumbnail fluid src='/api/user/avatar_icon'></b-img>
                            </div>
                            <article>
                                <p>\{{listing.listing_user_username}}</p>
                            </article>
                        </div>
                    </b-card-text>
                    <b-card-text class="row">
                        <div class="col-6">
                            <h2>
                            S$\{{listing.price}}
                            </h2>
                        </div>
                        <div class="col-6">
                            <div class="float-right">
                                <template v-if='like_before'>
                                     <span>
                                        <b-button variant='light' @click='unlikeListing'>
                                            <b-img src="https://img.icons8.com/plasticine/100/000000/like.png" style="height: 50px; width: 50px;">
                                        </b-button>
                                    </span>                                   
                                </template>
                                <template v-else>
                                    <span>
                                        <b-button variant='light' @click='likeListing'>
                                            <b-img src="https://img.icons8.com/plasticine/100/000000/like--v2.png" style="height: 50px; width: 50px;">
                                        </b-button>
                                    </span>
                                </template>
                                <span>\{{listing.num_likes}}</span>
                            </div>
                        </div>
                    </b-card-text>
                    <b-card-text>
                        <article>
                            <h3>\{{listing.title}}</h3>
                        </article>
                        <article>
                            <p>\{{listing.description}}</p>
                        </article>
                        <article>
                            Made \{{listing.created_timestamp.fromNow()}}
                        </article>
                    </b-card-text>
                    <template v-if='offer_placed'>
                        {{!-- If user has placed an offer --}}
                        <b-card-text>
                            <b-button variant="warning" :href='`/listing/offer/edit/${listing.listing_id}`'>Edit your offering</b-button>
                            <b-button variant='danger' @click='deleteOffer'>Delete your offer</b-button>
                        </b-card-text>
                    </template>
                    <template v-else>
                        {{!-- user has not placed an offer --}}
                        <b-card-text>
                            <b-button variant="primary" :href='`/listing/offer/${listing.listing_id}`'>Place an offering</b-button>
                        </b-card-text>
                    </template>
                    <template v-if='offers'>
                        {{!-- If there are offer made --}}
                        <b-card-text>
                            <article class="text-center">
                                <h3>Offers made on this listing</h3>
                            </article>
                        </b-card-text>
                        <b-card-text>
                            <b-card
                            v-for='offer in offers'
                            :bg-variant='offer.status ? "warning" : "primary"'
                            text-variant='white'
                            >
                                <b-card-text>
                                    <article class="d-block">
                                        <span class="font-weight-bold">Offer price: </span>
                                        <span>
                                            \{{offer.offer_price}}
                                        </span>
                                    </article>
                                    <article class="d-block">
                                        <span class="font-weight-bold">By: </span>
                                        <span>
                                            \{{offer.offer_user_username}}
                                        </span>
                                    </article>
                                    <article>
                                        <span>Made on: \{{offer.last_modified_timestamp.fromNow()}}</span>
                                    </article>
                                </b-card-text>
                            </b-card>
                        </b-card-text>
                    </template>
                    <template v-else>
                        {{!-- If there are no offers made --}}
                    </template>
                </b-card>
            </div>
        </template>
    </div>    
</main>

{{#section 'scripts'}}
<script>
    const app = new Vue({
        el: '#app',
        data: {
            listing: null,
            // For likes
            like_before: null,
            // For listing pictures
            listing_pictures: [],
            slide: 0,
            sliding: null,
            // For offers
            offers: [],
            offer_placed: null,
        },
        methods: {
            getListing(){
                const listing_id = window.location.pathname.split("/").pop();
                return axios.get(`/api/listing/${listing_id}`)
                .then(
                    function(res){
                        this.listing = res.data.listing;
                        this.listing.created_timestamp = moment(this.listing.created_timestamp);
                    }.bind(this)
                )
                .catch(
                    function(err){
                        console.log(err.response);
                        throw 'GET_ERR';
                    }
                )
            },
            getOffers(){
                const listing_id = window.location.pathname.split("/").pop();
                axios
                .get(`/api/offer/${listing_id}`)
                .then(
                    function(res){
                        this.offers = res.data.offers
                        for(let offer of this.offers){
                            offer.last_modified_timestamp = moment(offer.last_modified_timestamp)
                        }
                    }.bind(this)
                )
                .catch(
                    function(err){
                        console.log(err);
                        throw 'GET_ERR';
                    }
                )
            },
            checkOfferMade(){
                const listing_id = window.location.pathname.split("/").pop();
                axios
                .get(`/api/offer/check/${listing_id}`)
                .then(
                    function(res){
                        console.log(res)
                        this.offer_placed = res.data.offer_placed;
                    }.bind(this)
                )
                .catch(
                    function(err){
                        console.log(err.response);
                    }
                )
            },
            checkLike(){
                const listing_id = window.location.pathname.split("/").pop();
                axios
                .get(`/api/like/check/${listing_id}`)
                .then(
                    function(res){
                        console.log(res)
                        this.like_before = res.data.like_before;
                    }.bind(this)
                )
                .catch(
                    function(err){
                        console.log(err.response);
                    }
                )
            },
            deleteOffer(){
                const listing_id = window.location.pathname.split("/").pop();
                axios
                .delete(`/api/offer/${listing_id}`)
                .then(
                    function(res){
                        console.log(res.data);
                        document.location.reload(true);
                    }
                )
                .catch(
                    function(err){
                        console.log(err.response);
                    }
                )
            },
            likeListing(){
                const listing_id = window.location.pathname.split("/").pop();
                axios
                .post(`/api/like/${listing_id}`)
                .then(
                    function(res){
                        console.log(res);
                        document.location.reload(true);
                    }
                )
                .catch(
                    function(err){
                        console.log(err);
                    }
                )
            },
            unlikeListing(){
                const listing_id = window.location.pathname.split("/").pop();
                axios
                .delete(`/api/like/${listing_id}`)
                .then(
                    function(res){
                        console.log(res);
                        document.location.reload(true);
                    }
                )
                .catch(
                    function(err){
                        console.log(err);
                    }
                )
            },
            // Get the pictures for the listing
            getListingPictures(){
                const listing_id = window.location.pathname.split("/").pop();
                axios
                .get(`/api/listing/pictures/${listing_id}`)
                .then(
                    function(res){
                        console.log(res);
                        this.listing_pictures = res.data.listing_pictures;
                    }.bind(this)
                )
                .catch(
                    function(err){
                        console.log(err);
                    }
                )
            },
            // Methods for carousel
            onSlideStart(slide) {
                this.sliding = true
            },
            onSlideEnd(slide) {
                this.sliding = false
            }
        },
        created(){
            this.getListing();
            this.getOffers();
            this.checkOfferMade();
            this.checkLike();
            this.getListingPictures();
        }
    });
</script>
{{/section}}
