<main class="container-fluid mt-3">
    <div class="row">
        <div class="col-12 w-100">
            <article class="w-100 d-block">
                <h2 class="text-center">Create an account</h2>
            </article>
        </div>
        <div class="col-6">
            <b-form 
            {{!-- These corrospond to button type submit and reset events when pressed
            This then triggers the function in the vue object with the name --}}
            @submit='onSubmit'
            @reset='onReset'
            v-if='showForm'
            enctype="multipart/form-data"
            >
                {{!-- A form group is like an input here, group contains the label and input field --}}
                {{!-- Input to upload avatar icon --}}
                <b-form-group
                label='Your Avatar icon here'
                label-for='fAvatar'>
                    <b-form-file
                    id="fAvatar"
                    v-model='form.avatar_icon'
                    placeholder='Choose an avatar or drop it here'
                    drop-placeholder='Drop it here'
                    required
                    >
                    </b-form-file>
                    <div>
                        <article>
                            <p class="d-block">Selected file: \{{form.file ? form.file.name : 'No file currently selected'}}</p>
                        </article>
                    </div>
                </b-form-group>
                {{!-- Input for username --}}
                <b-form-group
                label='Your username'
                label-for='fUsername'>
                    <b-form-input
                    id="fUsername"
                    v-model='form.username'
                    type='text'
                    required
                    placeholder='Username'
                    @change='changeInput'
                    >
                    </b-form-input>
                </b-form-group>    
                {{!-- Input for password --}}
                <b-form-group
                label='Your password'
                label-for='fPassword'>
                    <b-form-input
                    id="fPassword"
                    v-model='form.password'
                    type='password'
                    required
                    placeholder='Password'
                    @change='changeInput'
                    >
                    </b-form-input>
                </b-form-group>
                {{!-- If creating the account failed --}}
                <template v-if='create_account_failed'>
                    <p class="text-danger">Creating account failed try again</p>
                </template>
                {{!-- Submit and reset buttons --}}
                <b-button type="submit" variant="primary">Submit</b-button>
                <b-button type="reset" variant="danger">Reset</b-button>
            </b-form>
        </div>
    </div>
</main>

{{#section 'scripts'}}
<script>
    const app = new Vue({
        el: '#app',
        data: {
            showForm: true,
            form: {
                username: '',
                password: '',
                avatar_icon: null,
            },
            create_account_failed: false, 
        },
        methods: {
            // General function for input field changing
            changeInput(){
                // We just set the text to not appear
                this.create_account_failed = false;
            },
            // Method called to reset the whole form
            onReset(event){
                event.preventDefault();
                this.form.username = '';
                this.form.password = '';
                this.form.avatar_icon = null;
                //This is to reload the form to make it empty
                this.showForm = false;
                Vue.nextTick(() => {
                    this.showForm = true;
                });
            },
            // API Calls below
            // Method called when form is submitted
            onSubmit(event){
                event.preventDefault();
                // Creating the formdata object to send using axios
                let form_data = new FormData();
                form_data.append('avatar_icon', this.form.avatar_icon);
                form_data.append('username', this.form.username);
                form_data.append('password', this.form.password);
                // Post request sent here
                axios
                .post('/api/account', form_data, {
                    headers:{
                        'Content-Type': 'multipart/form-data'
                    }
                })
                .then(
                    function(res){
                        // If account creation is successful, redirect to login page
                        window.location.pathname = '/login';
                    }
                )
                .catch(
                    function(err){
                        // Old temp code for return codes
                        /* if(err.response.status === 422){
                            // Wrong file extension given
                            return;
                        }
                        else if(err.response.status === 413){
                            // Uploaded file is too large
                            return;
                        }
                        else if(err.response.status === 403){
                            // Username is already taken
                            return;
                        } */
                        console.log(err);
                        // Setting the errrors
                        this.create_account_failed= true;
                    }.bind(this)
                );
            },
        }
    });
</script>
{{/section}}
