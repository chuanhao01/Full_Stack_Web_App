<main class="container-fluid mt-3">
    <div class="row">
        <div class="col-12 w-100">
            <article class="w-100 d-block">
                <h2 class="text-center">Login</h2>
            </article>
        </div>
        <div class="col-4 mx-auto">
            <b-form 
            {{!-- These corrospond to button type submit and reset events when pressed
            This then triggers the function in the vue object with the name --}}
            @submit='onSubmit'
            >
                {{!-- A form group is like an input here, group contains the label and input field --}}
                {{!-- Input for username --}}
                <b-form-group
                label='Username'
                label-for='fUsername'>
                    <b-form-input
                    id="fUsername"
                    v-model='form.username'
                    type='text'
                    required
                    placeholder='Username'
                    :class='form_validation.username'
                    @change='changeInput(form_validation.username)'>
                    </b-form-input>
                </b-form-group>    
                {{!-- Input for password --}}
                <b-form-group
                label='Password'
                label-for='fPassword'>
                    <b-form-input
                    id="fPassword"
                    v-model='form.password'
                    type='password'
                    required
                    placeholder='Password'
                    :class='form_validation.password'
                    @change='changeInput(form_validation.password)'>
                    </b-form-input>
                </b-form-group>
                <template v-if='login_failed'>
                    <p class="text-danger">Login failed</p>
                </template>
                {{!-- Submit and reset buttons --}}
                <b-button type="submit" variant="primary">Login</b-button>
            </b-form>
        </div>
    </div>
</main>

{{#section 'scripts'}}
<script>
    const app = new Vue({
        el: '#app',
        data: {
            form: {
                username: '',
                password: '',
            },
            form_validation: {
                // Contains the class binds for form input
                username: {
                    'is-invalid': false,
                },
                password: {
                    'is-invalid': false,
                }
            },
            // For server side check if login passed
            login_failed: false,
        },
        methods: {
            // General function called when an input is done
            changeInput(input_class_binding){
                input_class_binding['is-invalid'] = false;
                this.login_failed = false;
            },
            // Below is for api calls
            // Method called when form is submitted
            onSubmit(event){
                event.preventDefault();
                // Post request sent here
                axios
                    .post('/api/login', this.form)
                    .then(
                        function(res){
                            // Setting cookies if login is successful
                            console.log(res.data);
                            document.cookie = 'access_token=' + res.data.access_token;
                            document.cookie = 'refresh_token=' + res.data.refresh_token;
                            window.location.pathname = '/user/home';
                        }
                    )
                    .catch(
                        function(err){
                            console.error(err.response);
                            // Setting the inputs to true as login failed
                            this.form_validation.username['is-invalid'] = true;
                            this.form_validation.password['is-invalid'] = true;
                            // For the login failed message
                            this.login_failed = true;
                            return;
                        }.bind(this)
                    );
            },
        }
    });
</script>
{{/section}}
